//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Inserting(global::LightSwitchApplication.Service entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Inserted(global::LightSwitchApplication.Service entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Updating(global::LightSwitchApplication.Service entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Updated(global::LightSwitchApplication.Service entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Deleting(global::LightSwitchApplication.Service entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Deleted(global::LightSwitchApplication.Service entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Validate(global::LightSwitchApplication.Service entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updating(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updated(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Validate(global::LightSwitchApplication.Customer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updating(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updated(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Validate(global::LightSwitchApplication.Invoice entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Inserting(global::LightSwitchApplication.ProvidedService entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Inserted(global::LightSwitchApplication.ProvidedService entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Updating(global::LightSwitchApplication.ProvidedService entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Updated(global::LightSwitchApplication.ProvidedService entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Deleting(global::LightSwitchApplication.ProvidedService entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Deleted(global::LightSwitchApplication.ProvidedService entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Validate(global::LightSwitchApplication.ProvidedService entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Service> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Service> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Service> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Service> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Service> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Service> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Services_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProvidedService> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProvidedService> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProvidedService> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProvidedServices_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>
                __ServicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>(
                    "Services",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Validate);
            private static bool __Services_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Services_CanInsert(ref result);
                return result;
            }
            private static bool __Services_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Services_CanUpdate(ref result);
                return result;
            }
            private static bool __Services_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Services_CanDelete(ref result);
                return result;
            }
            private static bool __Services_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Services_CanRead(ref result);
                return result;
            }
            private static void __Services_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Service e)
            {
                d.Services_Inserting(e);
            }
            private static void __Services_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Service e)
            {
                d.Services_Inserted(e);
            }
            private static void __Services_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Service e)
            {
                d.Services_Updating(e);
            }
            private static void __Services_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Service e)
            {
                d.Services_Updated(e);
            }
            private static void __Services_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Service e)
            {
                d.Services_Deleting(e);
            }
            private static void __Services_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Service e)
            {
                d.Services_Deleted(e);
            }
            private static void __Services_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Service e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Services_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __CustomersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Validate);
            private static bool __Customers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanInsert(ref result);
                return result;
            }
            private static bool __Customers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanUpdate(ref result);
                return result;
            }
            private static bool __Customers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanDelete(ref result);
                return result;
            }
            private static bool __Customers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanRead(ref result);
                return result;
            }
            private static void __Customers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserting(e);
            }
            private static void __Customers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserted(e);
            }
            private static void __Customers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updating(e);
            }
            private static void __Customers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updated(e);
            }
            private static void __Customers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleting(e);
            }
            private static void __Customers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleted(e);
            }
            private static void __Customers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Customers_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __InvoicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Validate);
            private static bool __Invoices_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanInsert(ref result);
                return result;
            }
            private static bool __Invoices_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanUpdate(ref result);
                return result;
            }
            private static bool __Invoices_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanDelete(ref result);
                return result;
            }
            private static bool __Invoices_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanRead(ref result);
                return result;
            }
            private static void __Invoices_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserting(e);
            }
            private static void __Invoices_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserted(e);
            }
            private static void __Invoices_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updating(e);
            }
            private static void __Invoices_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updated(e);
            }
            private static void __Invoices_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleting(e);
            }
            private static void __Invoices_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleted(e);
            }
            private static void __Invoices_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Invoices_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>
                __ProvidedServicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>(
                    "ProvidedServices",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Validate);
            private static bool __ProvidedServices_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProvidedServices_CanInsert(ref result);
                return result;
            }
            private static bool __ProvidedServices_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProvidedServices_CanUpdate(ref result);
                return result;
            }
            private static bool __ProvidedServices_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProvidedServices_CanDelete(ref result);
                return result;
            }
            private static bool __ProvidedServices_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProvidedServices_CanRead(ref result);
                return result;
            }
            private static void __ProvidedServices_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProvidedService e)
            {
                d.ProvidedServices_Inserting(e);
            }
            private static void __ProvidedServices_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProvidedService e)
            {
                d.ProvidedServices_Inserted(e);
            }
            private static void __ProvidedServices_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProvidedService e)
            {
                d.ProvidedServices_Updating(e);
            }
            private static void __ProvidedServices_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProvidedService e)
            {
                d.ProvidedServices_Updated(e);
            }
            private static void __ProvidedServices_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProvidedService e)
            {
                d.ProvidedServices_Deleting(e);
            }
            private static void __ProvidedServices_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProvidedService e)
            {
                d.ProvidedServices_Deleted(e);
            }
            private static void __ProvidedServices_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProvidedService e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProvidedServices_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>
                __Services_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>(
                    "Services_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_Single_PreprocessQuery);
            private static bool __Services_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Services_Single_CanExecute(ref r);
                return r;
            }
            private static void __Services_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Services_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Services_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Services_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Service>)args[1]);
            }
            private static void __Services_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Services_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Services_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Service> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Service>)args[1];
                d.Services_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>
                __Services_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>(
                    "Services_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_SingleOrDefault_PreprocessQuery);
            private static bool __Services_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Services_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Services_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Services_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Services_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Services_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Service>)args[1]);
            }
            private static void __Services_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Services_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Services_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Service> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Service>)args[1];
                d.Services_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>
                __Services_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Service>(
                    "Services_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Services_All_PreprocessQuery);
            private static bool __Services_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Services_All_CanExecute(ref r);
                return r;
            }
            private static void __Services_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Services_All_Executing();
            }
            private static void __Services_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Services_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Service>)args[0]);
            }
            private static void __Services_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Services_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Services_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Service> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Service>)args[0];
                d.Services_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __Customers_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_PreprocessQuery);
            private static bool __Customers_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Customers_Single_CanExecute(ref r);
                return r;
            }
            private static void __Customers_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Customers_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer>)args[1]);
            }
            private static void __Customers_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Customers_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Customers_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Customer>)args[1];
                d.Customers_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __Customers_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_PreprocessQuery);
            private static bool __Customers_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Customers_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Customers_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Customers_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer>)args[1]);
            }
            private static void __Customers_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Customers_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Customers_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Customer>)args[1];
                d.Customers_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __Customers_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_PreprocessQuery);
            private static bool __Customers_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Customers_All_CanExecute(ref r);
                return r;
            }
            private static void __Customers_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_All_Executing();
            }
            private static void __Customers_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer>)args[0]);
            }
            private static void __Customers_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Customers_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Customers_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Customer>)args[0];
                d.Customers_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __Invoices_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_PreprocessQuery);
            private static bool __Invoices_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Invoices_Single_CanExecute(ref r);
                return r;
            }
            private static void __Invoices_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Invoices_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice>)args[1]);
            }
            private static void __Invoices_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Invoices_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Invoices_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice>)args[1];
                d.Invoices_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __Invoices_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_PreprocessQuery);
            private static bool __Invoices_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Invoices_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Invoices_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Invoices_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice>)args[1]);
            }
            private static void __Invoices_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Invoices_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Invoices_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice>)args[1];
                d.Invoices_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __Invoices_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_PreprocessQuery);
            private static bool __Invoices_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Invoices_All_CanExecute(ref r);
                return r;
            }
            private static void __Invoices_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_All_Executing();
            }
            private static void __Invoices_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice>)args[0]);
            }
            private static void __Invoices_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Invoices_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Invoices_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice>)args[0];
                d.Invoices_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>
                __ProvidedServices_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>(
                    "ProvidedServices_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_Single_PreprocessQuery);
            private static bool __ProvidedServices_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProvidedServices_Single_CanExecute(ref r);
                return r;
            }
            private static void __ProvidedServices_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProvidedServices_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProvidedServices_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProvidedServices_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProvidedService>)args[1]);
            }
            private static void __ProvidedServices_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProvidedServices_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProvidedServices_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService>)args[1];
                d.ProvidedServices_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>
                __ProvidedServices_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>(
                    "ProvidedServices_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_SingleOrDefault_PreprocessQuery);
            private static bool __ProvidedServices_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProvidedServices_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __ProvidedServices_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProvidedServices_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProvidedServices_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProvidedServices_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProvidedService>)args[1]);
            }
            private static void __ProvidedServices_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProvidedServices_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProvidedServices_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService>)args[1];
                d.ProvidedServices_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>
                __ProvidedServices_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProvidedService>(
                    "ProvidedServices_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProvidedServices_All_PreprocessQuery);
            private static bool __ProvidedServices_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProvidedServices_All_CanExecute(ref r);
                return r;
            }
            private static void __ProvidedServices_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProvidedServices_All_Executing();
            }
            private static void __ProvidedServices_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProvidedServices_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProvidedService>)args[0]);
            }
            private static void __ProvidedServices_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProvidedServices_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProvidedServices_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProvidedService>)args[0];
                d.ProvidedServices_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
